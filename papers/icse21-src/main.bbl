% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{duran1984evaluation}
J.~W. Duran and S.~C. Ntafos, ``An evaluation of random testing,'' \emph{IEEE
  transactions on Software Engineering}, no.~4, pp. 438--444, 1984.

\bibitem{zalewski2014american}
M.~Zalewski, ``American fuzzy lop,'' 2014.

\bibitem{swiecki2017honggfuzz}
R.~Swiecki, ``Honggfuzz: A general-purpose, easy-to-use fuzzer with interesting
  analysis options,'' \emph{URl: https://github. com/google/honggfuzz (visited
  on 06/21/2017)}, 2017.

\bibitem{miller2007analysis}
C.~Miller, Z.~N. Peterson \emph{et~al.}, ``Analysis of mutation and
  generation-based fuzzing,'' in \emph{Independent Security Evaluators, Tech.
  Rep}, vol.~4, 2007.

\bibitem{wang2019superion}
J.~Wang, B.~Chen, L.~Wei, and Y.~Liu, ``Superion: Grammar-aware greybox
  fuzzing,'' in \emph{2019 IEEE/ACM 41st International Conference on Software
  Engineering (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp.
  724--735.

\bibitem{holler2012fuzzing}
C.~Holler, K.~Herzig, and A.~Zeller, ``Fuzzing with code fragments,'' in
  \emph{Presented as part of the 21st $\{$USENIX$\}$ Security Symposium
  ($\{$USENIX$\}$ Security 12)}, 2012, pp. 445--458.

\bibitem{eddington2011peach}
M.~Eddington, ``Peach fuzzing platform,'' \emph{Peach Fuzzer}, vol.~34, 2011.

\bibitem{dharma}
{Mozilla}, ``{Dharma: a generation-based, context-free grammar fuzzer},''
  \mbox{\url{https://github.com/MozillaSecurity/dharma}}, 2015.

\bibitem{grieco2016quickfuzz}
G.~Grieco, M.~Ceresa, and P.~Buiras, ``Quickfuzz: An automatic random fuzzer
  for common file formats,'' \emph{ACM SIGPLAN Notices}, vol.~51, no.~12, pp.
  13--20, 2016.

\bibitem{grieco2017quickfuzz}
G.~Grieco, M.~Ceresa, A.~Mista, and P.~Buiras, ``Quickfuzz testing for fun and
  profit,'' \emph{Journal of Systems and Software}, vol. 134, pp. 340--354,
  2017.

\bibitem{lampropoulos2019coverage}
L.~Lampropoulos, M.~Hicks, and B.~C. Pierce, ``Coverage guided, property based
  testing,'' \emph{Proceedings of the ACM on Programming Languages}, vol.~3,
  no. OOPSLA, pp. 1--29, 2019.

\bibitem{mista2018branching}
A.~Mista, A.~Russo, and J.~Hughes, ``Branching processes for quickcheck
  generators,'' \emph{ACM SIGPLAN Notices}, vol.~53, no.~7, pp. 1--13, 2018.

\bibitem{mista2019generating}
A.~Mista and A.~Russo, ``Generating random structurally rich algebraic data
  type values,'' in \emph{2019 IEEE/ACM 14th International Workshop on
  Automation of Software Test (AST)}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2019, pp. 48--54.

\bibitem{duregaard2012feat}
J.~Dureg{\aa}rd, P.~Jansson, and M.~Wang, ``Feat: functional enumeration of
  algebraic types,'' \emph{ACM SIGPLAN Notices}, vol.~47, no.~12, pp. 61--72,
  2012.

\bibitem{lampropoulos2017generating}
L.~Lampropoulos, Z.~Paraskevopoulou, and B.~C. Pierce, ``Generating good
  generators for inductive relations,'' \emph{Proceedings of the ACM on
  Programming Languages}, vol.~2, no. POPL, pp. 1--30, 2017.

\bibitem{runciman2008smallcheck}
C.~Runciman, M.~Naylor, and F.~Lindblad, ``{SmallCheck and Lazy SmallCheck:
  automatic exhaustive testing for small values},'' in \emph{Proceedings of the
  first ACM SIGPLAN symposium on Haskell}, 2008, pp. 37--48.

\bibitem{boyapati2002korat}
C.~Boyapati, S.~Khurshid, and D.~Marinov, ``Korat: Automated testing based on
  java predicates,'' \emph{ACM SIGSOFT Software Engineering Notes}, vol.~27,
  no.~4, pp. 123--133, 2002.

\bibitem{haas2017bringing}
A.~Haas, A.~Rossberg, D.~L. Schuff, B.~L. Titzer, M.~Holman, D.~Gohman,
  L.~Wagner, A.~Zakai, and J.~Bastien, ``Bringing the web up to speed with
  webassembly,'' in \emph{Proceedings of the 38th ACM SIGPLAN Conference on
  Programming Language Design and Implementation}, 2017, pp. 185--200.

\bibitem{wasm-lib}
{Ilya Rezvov}, ``{wasm: WebAssembly Language Toolkit and Interpreter},''
  \mbox{\url{https://hackage.haskell.org/package/wasm}}, 2018.

\bibitem{claessen2011quickcheck}
K.~Claessen and J.~Hughes, ``Quickcheck: a lightweight tool for random testing
  of haskell programs,'' \emph{Acm sigplan notices}, vol.~46, no.~4, pp.
  53--64, 2011.

\end{thebibliography}
