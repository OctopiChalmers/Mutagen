% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{ClaessenH00}
K.~Claessen and J.~Hughes, ``{QuickCheck}: A lightweight tool for random
  testing of {Haskell} programs,'' in \emph{Proc. of the {ACM} {SIGPLAN}
  International Conference on Functional Programming {(ICFP})}, 2000.

\bibitem{hughes2003erlang}
J.~Hughes, ``Erlang/quickcheck,'' in \emph{Ninth International Erlang/OTP User
  Conference, {\"A}lvsj{\"o}, Sweden. November 2003}, 2003.

\bibitem{papadakis2011proper}
M.~Papadakis and K.~Sagonas, ``A proper integration of types and function
  specifications with property-based testing,'' in \emph{Proceedings of the
  10th ACM SIGPLAN workshop on Erlang}, 2011, pp. 39--50.

\bibitem{bulwahn2012new}
L.~Bulwahn, ``The new quickcheck for isabelle,'' in \emph{International
  Conference on Certified Programs and Proofs}.\hskip 1em plus 0.5em minus
  0.4em\relax Springer, 2012, pp. 92--108.

\bibitem{denes2014quickchick}
M.~D{\'e}n{\`e}s, C.~Hritcu, L.~Lampropoulos, Z.~Paraskevopoulou, and B.~C.
  Pierce, ``Quickchick: Property-based testing for coq,'' in \emph{The Coq
  Workshop}, 2014.

\bibitem{lampropoulos2019coverage}
L.~Lampropoulos, M.~Hicks, and B.~C. Pierce, ``Coverage guided, property based
  testing,'' \emph{Proceedings of the ACM on Programming Languages}, vol.~3,
  no. OOPSLA, pp. 1--29, 2019.

\bibitem{GriecoCB16}
G.~Grieco, M.~Ceresa, and P.~Buiras, ``{QuickFuzz}: An automatic random fuzzer
  for common file formats,'' in \emph{Proc. of the {ACM} {SIGPLAN}
  International Symposium on {Haskell}}, 2016.

\bibitem{DBLP:conf/haskell/MistaRH18}
A.~Mista, A.~Russo, and J.~Hughes, ``Branching processes for quickcheck
  generators,'' in \emph{Proc. of the {ACM} {SIGPLAN} Int. Symp. on Haskell},
  2018.

\bibitem{Mista2019GeneratingRS}
A.~Mista and A.~Russo, ``Generating random structurally rich algebraic data
  type values,'' in \emph{Proceedings of the 14th International Workshop on
  Automation of Software Test}, 2019.

\bibitem{DuregardJW12}
J.~Dureg{\aa}rd, P.~Jansson, and M.~Wang, ``Feat: Functional enumeration of
  algebraic types,'' in \emph{Proc. of the {ACM} {SIGPLAN} Int. Symp. on
  Haskell}, 2012.

\bibitem{Lampropoulos2017}
L.~Lampropoulos, Z.~Paraskevopoulou, and B.~C. Pierce, ``Generating good
  generators for inductive relations,'' \emph{In Proc. ACM on Programming
  Languages}, vol.~2, no. POPL, 2017.

\bibitem{Bendkowski2017}
M.~Bendkowski, K.~Grygiel, and P.~Tarau, ``Boltzmann samplers for closed
  simply-typed lambda terms,'' in \emph{In Proc. of International Symposium on
  Practical Aspects of Declarative Languages}.\hskip 1em plus 0.5em minus
  0.4em\relax ACM, 2017.

\bibitem{chen2020asurvey}
\BIBentryALTinterwordspacing
J.~Chen, J.~Patra, M.~Pradel, Y.~Xiong, H.~Zhang, D.~Hao, and L.~Zhang, ``A
  survey of compiler testing,'' \emph{ACM Comput. Surv.}, vol.~53, no.~1, Feb.
  2020. [Online]. Available: \url{https://doi.org/10.1145/3363562}
\BIBentrySTDinterwordspacing

\bibitem{Palka11}
M.~Pa{\l}ka, K.~Claessen, A.~Russo, and J.~Hughes, ``Testing and optimising
  compiler by generating random lambda terms,'' in \emph{The {IEEE/ACM}
  International Workshop on Automation of Software Test (AST)}, 2011.

\bibitem{perenyi2020stack}
{\'A}.~Per{\'e}nyi and J.~Midtgaard, ``Stack-driven program generation of
  webassembly,'' in \emph{Asian Symposium on Programming Languages and
  Systems}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2020, pp.
  209--230.

\bibitem{yang2011finding}
X.~Yang, Y.~Chen, E.~Eide, and J.~Regehr, ``Finding and understanding bugs in c
  compilers,'' in \emph{Proceedings of the 32nd ACM SIGPLAN conference on
  Programming language design and implementation}, 2011, pp. 283--294.

\bibitem{holler2012fuzzing}
C.~Holler, K.~Herzig, and A.~Zeller, ``Fuzzing with code fragments,'' in
  \emph{21st $\{$USENIX$\}$ Security Symposium ($\{$USENIX$\}$ Security 12)},
  2012, pp. 445--458.

\bibitem{wang2019superion}
J.~Wang, B.~Chen, L.~Wei, and Y.~Liu, ``Superion: Grammar-aware greybox
  fuzzing,'' in \emph{2019 IEEE/ACM 41st International Conference on Software
  Engineering (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp.
  724--735.

\bibitem{xsmith}
W.~G. Hatch, P.~Darragh, and E.~Eide, ``{Xsmith software repository.}''
  \mbox{\url{https://gitlab.flux.utah.edu/xsmith/xsmith}}, 2020.

\bibitem{afl}
{M. Zalewski}, ``{American Fuzzy Lop: a security-oriented fuzzer},''
  \mbox{\url{http://lcamtuf.coredump.cx/afl/}}, 2010.

\bibitem{honggfuzz}
R.~Swiecki, ``Honggfuzz: A general-purpose, easy-to-use fuzzer with interesting
  analysis options,'' \mbox{\url{https://github.com/google/honggfuzz}}, 2010.

\bibitem{libfuzzer}
``{LibFuzzer: A library for coverage-guided fuzz testing.}''
  \mbox{\url{http://llvm.org/docs/LibFuzzer.html}}, 2019.

\bibitem{dolan2017testing}
S.~Dolan and M.~Preston, ``Testing with crowbar,'' in \emph{OCaml Workshop},
  2017.

\bibitem{kersten2017poster}
R.~Kersten, K.~Luckow, and C.~S. P{\u{a}}s{\u{a}}reanu, ``Poster: Afl-based
  fuzzing for java with kelinci,'' in \emph{Proceedings of the 2017 ACM SIGSAC
  Conference on Computer and Communications Security}, 2017, pp. 2511--2513.

\bibitem{runciman2008smallcheck}
C.~Runciman, M.~Naylor, and F.~Lindblad, ``Smallcheck and lazy smallcheck:
  automatic exhaustive testing for small values,'' in \emph{Acm sigplan
  notices}, vol.~44, no.~2.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2008,
  pp. 37--48.

\bibitem{boyapati2002korat}
C.~Boyapati, S.~Khurshid, and D.~Marinov, ``Korat: Automated testing based on
  java predicates,'' \emph{ACM SIGSOFT Software Engineering Notes}, vol.~27,
  no.~4, pp. 123--133, 2002.

\bibitem{anon_2021}
Anon, ``Mutagen: Coverage-guided, property-based testing using exhaustive
  structure-preserving mutations (replication package),'' Oct 2021.

\bibitem{goguen1982security}
J.~A. Goguen and J.~Meseguer, ``Security policies and security models,'' in
  \emph{1982 IEEE Symposium on Security and Privacy}.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 1982, pp. 11--11.

\bibitem{10.1145/2578855.2535839}
\BIBentryALTinterwordspacing
A.~Azevedo~de Amorim, N.~Collins, A.~DeHon, D.~Demange, C.~Hri\c{t}cu,
  D.~Pichardie, B.~C. Pierce, R.~Pollack, and A.~Tolmach, ``A verified
  information-flow architecture,'' \emph{SIGPLAN Not.}, vol.~49, no.~1, p.
  165â€“178, Jan. 2014. [Online]. Available:
  \url{https://doi.org/10.1145/2578855.2535839}
\BIBentrySTDinterwordspacing

\bibitem{haskellwasm}
I.~Rezvov, ``{wasm: WebAssembly Language Toolkit and Interpreter},''
  \mbox{\url{https://hackage.haskell.org/package/wasm}}, 2018.

\bibitem{hritcu2013testing}
C.~Hritcu, J.~Hughes, B.~C. Pierce, A.~Spector-Zabusky, D.~Vytiniotis,
  A.~Azevedo~de Amorim, and L.~Lampropoulos, ``Testing noninterference,
  quickly,'' \emph{ACM SIGPLAN Notices}, vol.~48, no.~9, pp. 455--468, 2013.

\bibitem{hrictcu2016testing}
C.~Hri{\c{t}}cu, L.~Lampropoulos, A.~Spector-Zabusky, A.~A. De~Amorim,
  M.~D{\'e}n{\`e}s, J.~Hughes, B.~C. Pierce, and D.~Vytiniotis, ``Testing
  noninterference, quickly,'' \emph{Journal of Functional Programming},
  vol.~26, 2016.

\bibitem{haas2017bringing}
A.~Haas, A.~Rossberg, D.~L. Schuff, B.~L. Titzer, M.~Holman, D.~Gohman,
  L.~Wagner, A.~Zakai, and J.~Bastien, ``Bringing the web up to speed with
  webassembly,'' in \emph{Proceedings of the 38th ACM SIGPLAN Conference on
  Programming Language Design and Implementation}, 2017, pp. 185--200.

\bibitem{mckeeman1998differential}
W.~M. McKeeman, ``Differential testing for software,'' \emph{Digital Technical
  Journal}, vol.~10, no.~1, pp. 100--107, 1998.

\bibitem{arcuri2014hitchhiker}
A.~Arcuri and L.~Briand, ``A hitchhiker's guide to statistical tests for
  assessing randomized algorithms in software engineering,'' \emph{Software
  Testing, Verification and Reliability}, vol.~24, no.~3, pp. 219--250, 2014.

\bibitem{vargha2000critique}
A.~Vargha and H.~D. Delaney, ``A critique and improvement of the cl common
  language effect size statistics of mcgraw and wong,'' \emph{Journal of
  Educational and Behavioral Statistics}, vol.~25, no.~2, pp. 101--132, 2000.

\bibitem{grieco2017}
G.~Grieco, M.~Ceresa, A.~Mista, and P.~Buiras, ``{QuickFuzz} testing for fun
  and profit,'' \emph{Journal of Systems and Software}, vol. 134, 2017.

\bibitem{ClaessenDP14}
K.~Claessen, J.~Dureg{\aa}rd, and M.~H. Palka, ``Generating constrained random
  data with uniform distribution,'' in \emph{Proc. of the Functional and Logic
  Programming {FLOPS}}, 2014.

\bibitem{LampropoulosGHH17}
L.~Lampropoulos, D.~Gallois{-}Wong, C.~Hritcu, J.~Hughes, B.~C. Pierce, and
  L.~Xia, ``Beginner's luck: a language for property-based generators,'' in
  \emph{Proc. of the {ACM} {SIGPLAN} Symposium on Principles of Programming
  Languages, {POPL}}, 2017.

\bibitem{bohme2017coverage}
M.~B{\"o}hme, V.-T. Pham, and A.~Roychoudhury, ``Coverage-based greybox fuzzing
  as markov chain,'' \emph{IEEE Transactions on Software Engineering}, vol.~45,
  no.~5, pp. 489--506, 2017.

\bibitem{gan2018collafl}
S.~Gan, C.~Zhang, X.~Qin, X.~Tu, K.~Li, Z.~Pei, and Z.~Chen, ``Collafl: Path
  sensitive fuzzing,'' in \emph{2018 IEEE Symposium on Security and Privacy
  (SP)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2018, pp. 679--696.

\bibitem{bohme2017directed}
M.~B{\"o}hme, V.-T. Pham, M.-D. Nguyen, and A.~Roychoudhury, ``Directed greybox
  fuzzing,'' in \emph{Proceedings of the 2017 ACM SIGSAC Conference on Computer
  and Communications Security}, 2017, pp. 2329--2344.

\bibitem{loscher2017targeted}
A.~L{\"o}scher and K.~Sagonas, ``Targeted property-based testing,'' in
  \emph{Proceedings of the 26th ACM SIGSOFT International Symposium on Software
  Testing and Analysis}, 2017, pp. 46--56.

\bibitem{loscher2018automating}
------, ``Automating targeted property-based testing,'' in \emph{2018 IEEE 11th
  International Conference on Software Testing, Verification and Validation
  (ICST)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2018, pp. 70--80.

\end{thebibliography}
